[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tui-form-designer"
version = "2.1.0"
description = "Interactive form designer for Questionary-based terminal user interfaces"
readme = "README.md"
license = "MIT"
authors = [
    {name = "OpenProject Team", email = "support@openproject.org"},
]
maintainers = [
    {name = "Justin Bates", email = "justin@justinbates.dev"},
]
keywords = [
    "questionary",
    "interactive",
    "cli",
    "terminal",
    "tui",
    "forms",
    "configuration",
    "workflow",
    "yaml",
    "ui"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Environment :: Console",
]
requires-python = ">=3.8"
dependencies = [
    "questionary>=2.0.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "black>=23.0",
    "isort>=5.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "types-PyYAML>=6.0",
]
docs = [
    "mkdocs>=1.4",
    "mkdocs-material>=9.0",
    "mkdocs-mermaid2-plugin>=1.0",
]
examples = [
    "rich>=13.0",  # For enhanced example outputs
]

[project.urls]
Homepage = "https://github.com/JustinCBates/TUI_Form_Designer"
Documentation = "https://github.com/JustinCBates/TUI_Form_Designer#readme"
Repository = "https://github.com/JustinCBates/TUI_Form_Designer"
Issues = "https://github.com/JustinCBates/TUI_Form_Designer/issues"
Changelog = "https://github.com/JustinCBates/TUI_Form_Designer/releases"

[project.scripts]
tui-designer = "tui_form_designer.tools.cli:main"
tui-design = "tui_form_designer.tools.designer:main"
tui-validate = "tui_form_designer.tools.validator:main"
tui-test = "tui_form_designer.tools.tester:main"
tui-preview = "tui_form_designer.tools.preview:main"

[tool.hatch.version]
path = "src/tui_form_designer/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/flows",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/tui_form_designer"]

# Black configuration
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "questionary.*",
    "yaml.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    # Coverage options commented out until pytest-cov is installed
    # "--cov=tui_form_designer",
    # "--cov-report=term-missing",
    # "--cov-report=html",
    # "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 80
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]